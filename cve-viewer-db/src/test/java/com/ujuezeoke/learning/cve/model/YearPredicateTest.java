package com.ujuezeoke.learning.cve.model;

import org.junit.Test;

import java.util.Collections;

import static java.util.Arrays.asList;
import static org.hamcrest.core.Is.is;
import static org.junit.Assert.*;

/**
 * Created by ujuezeoke on 27/02/2016.
 */
public class YearPredicateTest {

    public static final String CVE_2015_TITLE = "CVE-2015-277162";

    @Test
    public void matchesYear() {
        YearPredicate underTest = new YearPredicate("2015");

        assertThat(underTest.test(buildCveVulnerability(CVE_2015_TITLE)), is(true));
    }

    @Test
    public void andPredicate() {
        YearPredicate underTest = new YearPredicate("2015");

        assertThat(underTest.and(something -> true)
                .test(buildCveVulnerability(CVE_2015_TITLE)), is(true));
    }

    @Test
    public void orPredicate() {
        YearPredicate underTest = new YearPredicate("2015");

        assertThat(underTest.or(something -> false)
                .test(buildCveVulnerability(CVE_2015_TITLE)), is(true));
    }
    @Test
    public void negatePredicate() {
        YearPredicate underTest = new YearPredicate("2015");

        assertThat(underTest.negate()
                .test(buildCveVulnerability(CVE_2015_TITLE)), is(false));
    }


    private CveVulnerability buildCveVulnerability(String stuff) {
        return new CveVulnerability(
                new CveDocumentType("whay"),
                new CveDocumentVersion("1223.322"),
                new CveDocumentDateTime("2015-11-27T06:01:46"),
                Collections.emptyList(),
                new CveVulnerabilityTitle(stuff),
                Collections.emptyList(),
                asList(new CveVulnerabilityReference(new ReferenceUrl("http://stuff"), new ReferenceDescription("more stuff")),
                        new CveVulnerabilityReference(new ReferenceUrl("file://why.com"), new ReferenceDescription("Jump")))
        );
    }
}