package com.ujuezeoke.learning.cve.store;

import com.google.gson.*;
import com.ujuezeoke.learning.cve.model.CveVulnerability;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.util.function.Predicate;

import static java.util.stream.Collectors.toList;

/**
 * Created by ujuezeoke on 02/12/2015.
 */
public class InMemoryVulunerabilityStore implements VulunerabilityStore {
    private final Map<String, String> vuluneabiliitiesStore = new ConcurrentHashMap<>();
    private final Gson gson;

    public InMemoryVulunerabilityStore() {
        gson = new GsonBuilder()
                .serializeNulls()
                .setPrettyPrinting()
                .create();
    }

    @Override
    public void store(CveVulnerability cveVulnerability) {
        String jsonValue = gson.toJson(cveVulnerability);
        vuluneabiliitiesStore.put(cveVulnerability.getTitle().getValue(), jsonValue);
    }

    @Override
    public List<CveVulnerability> retriveVulunerabilitiesWithPredicate(Predicate<CveVulnerability> predicate) {
        return vuluneabiliitiesStore.entrySet()
                .stream()
                .map(string -> gson.fromJson(string.getValue(), CveVulnerability.class))
                .filter(predicate::test)
                .collect(toList());
    }

}
